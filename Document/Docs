リファクタリング予定・TODOリスト

- fprintf使用禁止→dprintfやwriteベースに切り替えること。
- realloc使用禁止→reallocを用いないメモリアロケーション戦略を検討する。xrealloc削除。
- mallocエラーハンドリング→xmalloc, xreallocでexit対応済み。今後はエラー発生時のメッセージ整備。
- close漏れチェック：パイプ、リダイレクト時のfdを漏れなくcloseすることを確認。
- fork失敗時のリトライ戦略：forkに失敗した場合、何度か再試行する実装を検討する。
- 環境変数SHLVL管理の実装強化：新しいshellインスタンス起動時にSHLVLをインクリメント。
- PATH未設定時の動作改善：builtinコマンドenvなどの挙動をbash互換に。
- HereDocや追加(<< や >>)完全実装：ヒアドキュメントの入力受付と終了トリガー判定。
- exportやunsetの異常ケースでの動作安定化。エラーメッセージとセグフォ回避。
- exitの引数が数値以外の場合のエラー処理(bash準拠のエラーコードに合わせる)。
- ダブルクォート、シングルクォート内での展開ロジックの強化、bash同等へ近づける。
- parserやlexerやexecutorで正しくない構文が来た時の対処
- echo -nnnn の対応 [解決]
- miwasa@c4r1s10:~/Desktop/dev_mini$ cat | cat
^\Quit (core dumped)
miwasa@c4r1s10:~/Desktop/dev_mini$ cat | cat | ls
Document  incs  libft  Makefile  minishell  objs  srcs
^\miwasa@c4r1s10:~/Desktop/dev_mini$
- export +=の対応 [解決]
- exit のunnumericのエラーハンドリング [解決]
- miwasa@c4r1s10:~/Desktop/dev_mini$ echo $"USER"
USER
miwasa@c4r1s10:~/Desktop/dev_mini$ echo $"USER a"
USER a
miwasa@c4r1s10:~/Desktop/dev_mini$ ./minishell 
minishell> echo $"USER a"
$USER a
exportの引数なしをソートする
- heredoc: 変数展開されていない
miwasa@c4r1s10:~/Desktop/dev_mini$ cat << EOS
> $HOME
> EOS
/home/miwasa
miwasa@c4r1s10:~/Desktop/dev_mini$ ./minishell 
minishell> cat << EOS
> $HOME
> EOS
$HOME
-miwasa@c4r1s10:~/Desktop/dev_mini$ ./minishell 
minishell> cat <<  EOF << EOF2 << EOF3 
> nowre
> EOF
minishell: redirection error
minishell> cat infile | cat ||| cat > outfile
cat: infile: No such file or directory
miwasa@c4r1s10:~/Desktop/dev_mini$ cat infile | cat ||| cat > outfile
bash: syntax error near unexpected token `|'
minishell> /bin/
minishell: execve error: Permission denied
minishell> 
exit
miwasa@c4r1s10:~/Desktop/dev_mini$ /bin/
bash: /bin/: Is a director

-未対応の見込み
一時exportするだけで良さそう
shell変数
$ a=b ./minishell
$ echo $a
b
HereDoc時のctrl + Dの挙動
""閉じられてないクオート系
$$ pididの取得
SHLVLの対応
export aa
などの対応
bashの場合、変数のみの場合、exportには表示しますが、envには表示しません
ただし、空文字の場合はenvにもexportにも表示します
~の解釈$HOMEとおなじでよいのか？
export 引数なしaa="aaa"と出力されるべきか
heredoc中にctrl + D <- warningなので問題はなさそう(今のままで問題なさそう)